name: CI

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.0.100
    - name: Generate coverage report
      run: |
        cd ./uiowa.DelimitedDataHelper.Tests/
        dotnet test /p:CollectCoverage=true /p:CoverletOutput=TestResults/Coverage/ /p:CoverletOutputFormat=cobertura
    - name: Upload coverage to Codecov  
      uses: codecov/codecov-action@v1.0.3
      with:
        token: ${{secrets.CODECOV_TOKEN}}
        file: ./TestResults/Coverage/coverage.cobertura.xml
        flags: unittests
        name: codecov-umbrella
    - name: Build and deploy NuGet package
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
      run: |
        echo $GITHUB_REF
        RELEASE_VERSION=${GITHUB_REF:10}
        echo $RELEASE_VERSION
        if [[ $RELEASE_VERSION == v* ]]; then
          echo "Relase version:" $RELEASE_VERSION
          cd ./uiowa.DelimitedDataHelper/
          dotnet publish -c=Release /p:Version="${RELEASE_VERSION:1}"
          ls ./bin/Release
          # dotnet nuget push ./bin/Release/*.nupkg -k $NUGET_API_KEY -s https://api.nuget.org/v3/index.json
        else
          echo "No valid version tag was found. Done for today."
        fi
